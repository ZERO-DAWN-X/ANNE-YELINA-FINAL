generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  orders    Order[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Product {
  id           String   @id @default(uuid())
  name         String
  price        Float
  oldPrice     Float?
  category     String
  brand        String
  description  String   @db.Text
  content      String   @db.Text
  image        String
  imageGallery Json
  filterItems  Json
  colors       Json?
  isNew        Boolean  @default(false)
  isSale       Boolean  @default(false)
  isStocked    Boolean  @default(true)
  productNumber String
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  categoryId  String?
  brandId     String?
  
  categoryRel Category? @relation(fields: [categoryId], references: [id])
  brandRel    Brand?    @relation(fields: [brandId], references: [id])

  @@map("products")
}

model Order {
  id            String      @id @default(uuid())
  orderNumber   String      @unique
  userId        Int
  user          User        @relation(fields: [userId], references: [id])
  totalAmount   Float
  status        OrderStatus @default(PENDING)
  items         Json        // Array of ordered products
  shippingInfo  Json        // Shipping details
  paymentProof  String?     // Add this field for payment slip image URL
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")

  @@map("orders")
}

model Category {
  id        String    @id @default(cuid())
  name      String
  slug      String    @unique
  image     String?
  products  Product[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("categories")
}

model Brand {
  id        String    @id @default(cuid())
  name      String
  slug      String    @unique
  products  Product[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("brands")
} 